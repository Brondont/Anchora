@startuml role_managment_sequence

actor Admin
participant "Admin Frontend" as Frontend
participant "MetaMask" as MetaMask
participant "Smart Contract\n(OfferFactory)" as Contract
participant "Blockchain" as Blockchain
participant "Server" as Server
database "Database" as DB

title Role Management Process

== Normal Flow ==
Admin -> Frontend: Access user management\nand select user to update role
Frontend -> Frontend: Display current roles\nand available options
Admin -> Frontend: Select new role for user
Frontend -> MetaMask: Request transaction signature
activate MetaMask
MetaMask -> Admin: Prompt to sign transaction
Admin -> MetaMask: Confirm and sign
MetaMask -> Contract: Send signed transaction\nto update role
activate Contract
Contract -> Blockchain: Submit transaction
activate Blockchain
Blockchain --> Contract: Transaction included in block
deactivate Blockchain
Contract --> MetaMask: Return transaction hash
deactivate Contract
MetaMask --> Frontend: Return transaction success
deactivate MetaMask
Frontend -> Server: POST /api/v1/users/{id}/roles
note right: Includes transaction hash\nand role details
activate Server
Server -> Blockchain: Verify transaction confirmation
Blockchain --> Server: Confirm transaction
Server -> Server: Validate role update authorization
Server -> DB: Update user role in database
DB --> Server: Confirm update
Server --> Frontend: 200 OK (Role updated)
Frontend --> Admin: Display success message
deactivate Server

== Transaction Rejection Scenario ==
Admin -> Frontend: Select user to update role
Frontend -> Frontend: Display role options
Admin -> Frontend: Select new role
Frontend -> MetaMask: Request transaction signature
activate MetaMask
MetaMask -> Admin: Prompt to sign transaction
Admin -> MetaMask: Reject transaction
MetaMask --> Frontend: Transaction rejected
deactivate MetaMask
Frontend --> Admin: Display "Transaction cancelled" message

== Blockchain Error Scenario ==
Admin -> Frontend: Select user to update role
Frontend -> MetaMask: Request transaction signature
activate MetaMask
MetaMask -> Admin: Prompt to sign
Admin -> MetaMask: Confirm and sign
MetaMask -> Contract: Send signed transaction
activate Contract
Contract -> Blockchain: Submit transaction
activate Blockchain
Blockchain --> Contract: Transaction failed (e.g., gas limit)
deactivate Blockchain
Contract --> MetaMask: Return error
deactivate Contract
MetaMask --> Frontend: Transaction failed
deactivate MetaMask
Frontend --> Admin: Display blockchain error message

== Database Update Error ==
Admin -> Frontend: Select user to update role
Frontend -> MetaMask: Request transaction signature
activate MetaMask
Admin -> MetaMask: Confirm and sign
MetaMask -> Contract: Send signed transaction
Contract -> Blockchain: Submit transaction
Blockchain --> Contract: Transaction included in block
Contract --> MetaMask: Return transaction hash
MetaMask --> Frontend: Return transaction success
deactivate MetaMask
Frontend -> Server: POST /api/users/{id}/roles
activate Server
Server -> Blockchain: Verify transaction confirmation
Blockchain --> Server: Confirm transaction
Server -> DB: Update user role in database
DB --> Server: Database error
Server --> Frontend: 500 Internal Server Error
Frontend --> Admin: Display error message with\noption to retry server update
deactivate Server

@enduml