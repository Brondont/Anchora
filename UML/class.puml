@startuml class
left to right direction
skinparam linetype ortho
skinparam ArrowFontSize 10

' -- Base User and Derived Roles --
class User {
  +ID: uint
  +firstName: string
  +lastName: string
  +email: string
  +password: string
  +phoneNumber: string
  +accountActivationHash: string
  +isActive: boolean
  +createdAt: time.Time
  +updatedAt: time.Time
  +deletedAt: time.Time
}

class Admin {
  +manageUsers()
  +overseeSystem()
  +monitorProcesses()
}

class Entrepreneur {
  +submitProposal()
  +viewOffers()
}

class TenderAdministrator {
  +createOffer()
  +manageOffers()
}

' Expanded Expert with proof-of-stake and blockchain identity properties
class Expert {
  +specialization: string
  +stakeAmount: float
  +stakeWeight: float
  +nodeReputation: float
  +yearsExperience: int
  +nodeID: string
  +evaluateProposal()
  +updateStake(amount: float)
  +calculateStakeWeight(): float
  +updateReputation(score: float)
}

class Role {
  +ID: uint
  +name: string
  +createdAt: time.Time
  +updatedAt: time.Time
  +deletedAt: time.Time
}

' -- Business Entities --
class Offer {
  +ID: uint
  +title: string
  +description: string
  +budget: float
  +currency: string
  +category: string
  +location: string
  +bidDeadline: time.Time
  +contractStart: time.Time
  +status: string
  +winningProposalID: uint
  +createdBy: uint
  +createdAt: time.Time
  +updatedAt: time.Time
  +deletedAt: time.Time
}

class Proposal {
  +ID: uint
  +offerID: uint
  +entrepreneurID: uint
  +technicalProposal: string     
  +financialOffer: float         
  +timeline: string              
  +requiredManpower: int         
  +bidBondAmount: float            
  +pastExperience: string          
  +status: string
  +submittedAt: time.Time
  +finalScore: float
  +dataCID: string   // IPFS content identifier for proposal data
  +createdAt: time.Time
  +updatedAt: time.Time
  +deletedAt: time.Time
}

' BlockchainVote records on-chain votes with a transaction hash for traceability
class BlockchainVote {
  +ID: uint
  +proposalID: uint
  +expertID: uint
  +voteScore: float
  +comments: string
  +weight: float
  +txHash: string   // Blockchain transaction hash for the vote
  +evaluatedAt: time.Time
  +createdAt: time.Time
  +updatedAt: time.Time
  +deletedAt: time.Time
}

' Document stores files with an IPFS CID for decentralized storage
class Document {
  +ID: uint
  +name: string
  +url: string
  +ipfsCID: string   // IPFS content identifier
  +documentableID: uint
  +documentableType: string
  +size: int
  +fileType: string
  +uploadedBy: uint
  +createdAt: time.Time
  +updatedAt: time.Time
  +deletedAt: time.Time
}

class OfferRules {
  +ID: uint
  +name: string
  +description: string
  +createdAt: time.Time
  +updatedAt: time.Time
  +deletedAt: time.Time
}

' OfferContract represents the on-chain smart contract that formalizes an offerâ€™s terms
class OfferContract {
  +ID: uint
  +offerID: uint
  +winningProposalID: uint
  +terms: string
  +contractAddress: string
  +txHash: string   // Blockchain transaction hash for contract deployment
  +status: string
  +createdAt: time.Time
  +updatedAt: time.Time
}

' -- Inheritance --
User <|-- Admin
User <|-- Entrepreneur
User <|-- TenderAdministrator
User 
